tosca_definitions_version: cloudify_dsl_1_3

inputs:

  default_nodejs_instances_total:
    default: 2

  nodejs_aws_max_instances:
    default: 1

  nodejs_openstack_max_instances:
    default: 0

  nodejs_aws_burst_after_aws_threshold:
    default: nodejs_openstack_max_instances

  nodejs_openstack_burst_after_aws_threshold:
    default: { get_input: nodejs_aws_max_instances }

node_templates:

  haproxy_frontend_host:
    type: cloudify.nodes.DeploymentPlan
    capabilities:
      scalable:
        properties:
          default_instances: 1
    properties:
      deployment_plans:
        haproxy_aws_virtual_machine:
          capacity: { get_input: haproxy_aws_instances }
        haproxy_openstack_virtual_machine:
          capacity: { get_input: haproxy_openstack_instances }
    relationships:
      - type: cloudify.dp.relationships.plans
        target: haproxy_aws_virtual_machine
      - type: cloudify.dp.relationships.plans
        target: haproxy_openstack_virtual_machine
    interfaces:
      cloudify.interfaces.monitoring_agent:
        install:
          implementation: diamond.diamond_agent.tasks.install
          inputs:
            diamond_config:
              interval: 5
        start: diamond.diamond_agent.tasks.start
        stop: diamond.diamond_agent.tasks.stop
        uninstall: diamond.diamond_agent.tasks.uninstall
      cloudify.interfaces.monitoring:
          start:
            implementation: diamond.diamond_agent.tasks.add_collectors
            inputs:
              collectors_config:
                HAProxyCollector:
                  config:
                    url: http://127.0.0.1:9000/haproxy_stats;csv

  mongod_host:
    type: cloudify.nodes.DeploymentPlan
    capabilities:
      scalable:
        properties:
          default_instances: 1
    properties:
      deployment_plans:
        mongodb_aws_virtual_machine:
          capacity: { get_input: mongodb_aws_instances }
        mongodb_openstack_virtual_machine:
          capacity:{ get_input: mongodb_openstack_instances }
    relationships:
      - type: cloudify.dp.relationships.plans
        target: mongodb_aws_virtual_machine
      - type: cloudify.dp.relationships.plans
        target: mongodb_openstack_virtual_machine
    interfaces:
      cloudify.interfaces.monitoring_agent:
        install:
          implementation: diamond.diamond_agent.tasks.install
          inputs:
            diamond_config:
              interval: 5
        start: diamond.diamond_agent.tasks.start
        stop: diamond.diamond_agent.tasks.stop
        uninstall: diamond.diamond_agent.tasks.uninstall

  nodejs_host:
    type: cloudify.nodes.DeploymentPlan
    capabilities:
      scalable:
        properties:
          default_instances: { get_input: default_nodejs_instances_total }
    properties:
      deployment_plans:
        nodejs_aws_virtual_machine:
          capacity: { get_input: nodejs_aws_max_instances }
          contraints:
            nodejs_openstack_virtual_machine: { nodejs_aws_burst_after_aws_threshold }
        nodejs_openstack_virtual_machine:
          capacity: { get_input: nodejs_openstack_max_instances }
          contraints:
            nodejs_aws_virtual_machine: { nodejs_openstack_burst_after_aws_threshold }
    relationships:
      - type: cloudify.dp.relationships.plans
        target: nodejs_openstack_virtual_machine
      - type: cloudify.dp.relationships.plans
        target: nodejs_aws_virtual_machine
    interfaces:
      cloudify.interfaces.monitoring_agent:
        install:
          implementation: diamond.diamond_agent.tasks.install
          inputs:
            diamond_config:
              interval: 5
        start: diamond.diamond_agent.tasks.start
        stop: diamond.diamond_agent.tasks.stop
        uninstall: diamond.diamond_agent.tasks.uninstall
      cloudify.interfaces.monitoring:
          start:
            implementation: diamond.diamond_agent.tasks.add_collectors
            inputs:
              collectors_config:
                CPUCollector: {}
                MemoryCollector: {}
                LoadAverageCollector: {}
                DiskUsageCollector:
                  config:
                    devices: x?vd[a-z]+[0-9]*$
                NetworkCollector: {}
                ProcessResourcesCollector:
                  config:
                    enabled: true
                    unit: B
                    measure_collector_time: true
                    cpu_interval: 0.5
                    process:
                      node:
                        name: node
