tosca_definitions_version: cloudify_dsl_1_3

inputs:

  use_existing_example_openstack_group:
    type: boolean
    default: false

  example_openstack_group_name:
    default: 'example-openstack-group'

  openstack_open_group_rules:
    default:
      - remote_ip_prefix: 0.0.0.0/0
        port_range_min: 1
        port_range_max: 65535
        protocol: tcp
      - remote_ip_prefix: 0.0.0.0/0
        port_range_min: 1
        port_range_max: 65535
        protocol: udp
      - remote_ip_prefix: 0.0.0.0/0
        port_range_min: null
        port_range_max: null
        protocol: icmp

  use_existing_haproxy_openstack_group:
    type: boolean
    default: false

  haproxy_openstack_group_name:
    default: 'haproxy-openstack-group'

  haproxy_openstack_group_rules:
    default:
      - remote_ip_prefix: 0.0.0.0/0
        port: { get_property: [ haproxy, frontend_port ] }
      - remote_ip_prefix: 0.0.0.0/0
        port: { get_property: [ haproxy, statistics_port ]}

  use_existing_mongodb_openstack_group:
    type: boolean
    default: false

  mongodb_openstack_group_name:
    default: 'mongodb-openstack-group'

  mongodb_openstack_group_rules:
    default:
      - remote_ip_prefix: 0.0.0.0/0
        port: { get_property: [ mongod, port ] }
      - remote_ip_prefix: 0.0.0.0/0
        port: 28017

  use_existing_nodejs_openstack_group:
    type: boolean
    default: false

  nodejs_openstack_group_name:
    default: 'nodejs-openstack-group'

  nodejs_openstack_group_rules:
    default:
      - remote_ip_prefix: 0.0.0.0/0
        port: { get_property: [ nodecellar, port ] }

node_templates:

  example_openstack_group:
    type: cloudify.openstack.nodes.SecurityGroup
    properties:
      openstack_config: { get_input: openstack_configuration }
      use_external_resource: { get_input: use_existing_example_openstack_group }
      resource_id: { get_input: example_openstack_group_name }
      rules: { get_input: openstack_open_group_rules }

  haproxy_openstack_group:
    type: cloudify.openstack.nodes.SecurityGroup
    properties:
      openstack_config: { get_input: openstack_configuration }
      use_external_resource: { get_input: use_existing_haproxy_openstack_group }
      resource_id: { get_input: haproxy_openstack_group_name }
      security_group:
        name: haproxy_frontend_security_group
      rules: { get_input: haproxy_openstack_group_rules }

  mongodb_openstack_group:
    type: cloudify.openstack.nodes.SecurityGroup
    properties:
      openstack_config: { get_input: openstack_configuration }
      use_external_resource: { get_input: use_existing_mongodb_openstack_group }
      resource_id: { get_input: mongodb_openstack_group_name }
      security_group:
        name: mongodb_frontend_security_group
      rules: { get_input: mongodb_openstack_group_rules }

  nodejs_openstack_group:
    type: cloudify.openstack.nodes.SecurityGroup
    properties:
      openstack_config: { get_input: openstack_configuration }
      use_external_resource: { get_input: use_existing_nodejs_openstack_group }
      resource_id: { get_input: nodejs_openstack_group_name }
      security_group:
        name: nodejs_frontend_security_group
      rules: { get_input: nodejs_openstack_group_rules }
